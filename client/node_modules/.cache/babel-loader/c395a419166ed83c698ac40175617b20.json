{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\David\\\\Desktop\\\\dev\\\\courses\\\\acs2912.2\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{React,useEffect,useState}from'react';import{useSelector}from'react-redux';import{NavLink}from'react-router-dom';import'./Cards.css';import AuthService from'../../services/auth-service';import cardsService from'../../services/cards-service';import UserService from'../../services/user-service';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Cards(){var user=AuthService.getCurrentUser();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];useEffect(function(){cardsService.getCards().then(function(cards){var cardData=cards.data;var usernamePromise=cardData.map(function(element){var username=UserService.getUserID(element.author);return username.then(function(elem){element.username=elem.data.username;});});Promise.all(usernamePromise).then(function(){return setData(cardData);});});});// Gets post from database and returns parsed jsx elements\n//          <input type=\"button\" value=\"Submit\" onClick={deletePost(e._id)}></input>\nvar generateCards=function generateCards(){return data.map(function(e){return/*#__PURE__*/_jsxs(\"div\",{className:\"blurbs\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cardHead\",children:/*#__PURE__*/_jsx(\"h1\",{children:e.title})}),/*#__PURE__*/_jsx(\"p\",{children:e.content}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Delete\",onClick:function onClick(){return cardsService.deleteCard(e._id,AuthService.getCurrentUser().accessToken);}})})]});});};return/*#__PURE__*/_jsxs(\"div\",{className:\"cards\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Cards\"}),\"Like this Card Stack?\",/*#__PURE__*/_jsxs(\"div\",{children:[count<1&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setCount(count+1);},children:\"+\"}),/*#__PURE__*/_jsx(\"span\",{children:count}),count>=-1&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setCount(count-1);},children:\"-\"})]}),user&&/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(NavLink,{className:\"createCard\",to:\"/createCard\",children:\" + Card\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"displayCards\",children:data?generateCards():'loading'})]});}export default Cards;","map":{"version":3,"sources":["C:/Users/David/Desktop/dev/courses/acs2912.2/client/src/components/Cards/Cards.js"],"names":["React","useEffect","useState","useSelector","NavLink","AuthService","cardsService","UserService","Cards","user","getCurrentUser","count","setCount","data","setData","getCards","then","cards","cardData","usernamePromise","map","element","username","getUserID","author","elem","Promise","all","generateCards","e","title","content","deleteCard","_id","accessToken"],"mappings":"sJAAA,OAASA,KAAT,CAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAO,aAAP,CAEA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,C,wFAEA,QAASC,CAAAA,KAAT,EAAiB,CAChB,GAAMC,CAAAA,IAAI,CAAGJ,WAAW,CAACK,cAAZ,EAAb,CACA,cAAwBR,QAAQ,CAAC,CAAD,CAAhC,wCAAKS,KAAL,eAAYC,QAAZ,eAEA,eAAwBV,QAAQ,CAAC,IAAD,CAAhC,yCAAOW,IAAP,eAAaC,OAAb,eACAb,SAAS,CAAC,UAAM,CACfK,YAAY,CAACS,QAAb,GAAwBC,IAAxB,CAA6B,SAACC,KAAD,CAAW,CACvC,GAAIC,CAAAA,QAAQ,CAAGD,KAAK,CAACJ,IAArB,CACA,GAAMM,CAAAA,eAAe,CAAGD,QAAQ,CAACE,GAAT,CAAa,SAACC,OAAD,CAAa,CACjD,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,CAACgB,SAAZ,CAAsBF,OAAO,CAACG,MAA9B,CAAjB,CAEA,MAAOF,CAAAA,QAAQ,CAACN,IAAT,CAAc,SAACS,IAAD,CAAU,CAC9BJ,OAAO,CAACC,QAAR,CAAmBG,IAAI,CAACZ,IAAL,CAAUS,QAA7B,CACA,CAFM,CAAP,CAGA,CANuB,CAAxB,CAOAI,OAAO,CAACC,GAAR,CAAYR,eAAZ,EAA6BH,IAA7B,CAAkC,iBAAMF,CAAAA,OAAO,CAACI,QAAD,CAAb,EAAlC,EACA,CAVD,EAWA,CAZQ,CAAT,CAaA;AACA;AAEA,GAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC3B,MAAOf,CAAAA,IAAI,CAACO,GAAL,CAAS,SAAAS,CAAC,CAAI,CAEnB,mBACD,aAAK,SAAS,CAAG,QAAjB,wBACE,YAAK,SAAS,CAAC,UAAf,uBACD,oBAAKA,CAAC,CAACC,KAAP,EADC,EADF,cAIE,mBAAID,CAAC,CAACE,OAAN,EAJF,cAKE,kCACA,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,QAA3B,CAAoC,OAAO,CAAE,yBAAMzB,CAAAA,YAAY,CAAC0B,UAAb,CAAwBH,CAAC,CAACI,GAA1B,CAA+B5B,WAAW,CAACK,cAAZ,GAA6BwB,WAA5D,CAAN,EAA7C,EADA,EALF,GADC,CAYD,CAdM,CAAP,CAgBE,CAjBH,CAmBA,mBACC,aAAK,SAAS,CAAC,OAAf,wBACE,6BADF,sCAIE,uBACEvB,KAAK,CAAG,CAAR,eAAa,eAAQ,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAAED,KAAK,CAAG,CAAV,CAAd,EAAjB,eADf,cAIC,sBAAOA,KAAP,EAJD,CAKEA,KAAK,EAAI,CAAC,CAAV,eAAe,eAAQ,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAAED,KAAK,CAAG,CAAV,CAAd,EAAjB,eALjB,GAJF,CAeGF,IAAI,eACN,qCACE,KAAC,OAAD,EAAS,SAAS,CAAC,YAAnB,CAAgC,EAAE,CAAC,aAAnC,qBADF,EAhBD,cAsBE,YAAK,SAAS,CAAC,cAAf,UACAI,IAAI,CAAGe,aAAa,EAAhB,CAAqB,SADzB,EAtBF,GADD,CA8BA,CAED,cAAepB,CAAAA,KAAf","sourcesContent":["import { React, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Cards.css';\r\n\r\nimport AuthService from '../../services/auth-service';\r\nimport cardsService from '../../services/cards-service';\r\nimport UserService from '../../services/user-service';\r\n\r\nfunction Cards() {\r\n\tconst user = AuthService.getCurrentUser()\r\n\tvar [count, setCount] = useState(0);\r\n\r\n\tconst [data, setData] = useState(null);\r\n\tuseEffect(() => {\r\n\t\tcardsService.getCards().then((cards) => {\r\n\t\t\tvar cardData = cards.data;\r\n\t\t\tconst usernamePromise = cardData.map((element) => {\r\n\t\t\t\tconst username = UserService.getUserID(element.author);\r\n\r\n\t\t\t\treturn username.then((elem) => {\r\n\t\t\t\t\telement.username = elem.data.username;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tPromise.all(usernamePromise).then(() => setData(cardData));\r\n\t\t});\r\n\t});\r\n\t// Gets post from database and returns parsed jsx elements\r\n\t//          <input type=\"button\" value=\"Submit\" onClick={deletePost(e._id)}></input>\r\n\r\n\tconst generateCards = () => {\r\n\t\treturn data.map(e => {\r\n\t\r\n\t\t  return(\r\n\t\t\t<div className = 'blurbs'>\r\n\t\t\t  <div className='cardHead'>\r\n\t\t\t\t<h1>{e.title}</h1>\t\t\t\r\n\t\t\t  </div>\r\n\t\t\t  <p>{e.content}</p>\r\n\t\t\t  <div>\r\n\t\t\t  <input type=\"button\" value=\"Delete\" onClick={() => cardsService.deleteCard(e._id, AuthService.getCurrentUser().accessToken)}></input>\r\n\t\t\t  </div>\r\n\t   \r\n\t\t\t</div>\r\n\t\t  )\r\n\t\t})\r\n\t\r\n\t  }\r\n\r\n\treturn (\r\n\t\t<div className=\"cards\">\r\n\t\t  <h1>Cards</h1>\r\n\t\t\t  \r\n\t\t  Like this Card Stack? \r\n\t\t\t\t<div>\r\n\t\t\t\t\t{count < 1 && <button onClick={() => setCount((count + 1))}>\r\n\t\t\t\t\t\t+\r\n\t\t\t\t\t</button>}\r\n\t\t\t\t\t<span>{count}</span>\r\n\t\t\t\t\t{count >= -1 && <button onClick={() => setCount((count - 1))}>\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t</button>}\r\n\t\t\t\t</div>\r\n\t\r\n\t\t  {/* Create Post button | Accessed via log-in*/}\r\n\t\t  {user &&\r\n\t\t\t<button>\r\n\t\t\t  <NavLink className=\"createCard\" to=\"/createCard\"> + Card</NavLink>\r\n\t\t\t</button>\r\n\t\t  }\r\n\t\t  \r\n\t\t  {/* DisplaysPosts */}\r\n\t\t  <div className=\"displayCards\">\r\n\t\t\t{data ? generateCards() : 'loading'}\r\n\t\t  </div>\r\n\t\t  \r\n\t\r\n\t\t</div>\r\n\t )\r\n}\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}