[{"C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\index.js":"1","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\reportWebVitals.js":"2","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\App.js":"3","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\serviceWorker.js":"4","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Navbar\\NavigationBar.js":"5","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Login\\Login.js":"6","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Cards\\Cards.js":"7","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Register\\Register.js":"8","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Landing\\Landing.js":"9","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Cards\\createCard.js":"10","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Landing\\particles-config.js":"11","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\services\\auth-service.js":"12","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\services\\user-service.js":"13","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\services\\cards-service.js":"14","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\services\\auth-header.js":"15"},{"size":648,"mtime":1641459752310,"results":"16","hashOfConfig":"17"},{"size":397,"mtime":1641529718012,"results":"18","hashOfConfig":"17"},{"size":1275,"mtime":1642057069181,"results":"19","hashOfConfig":"17"},{"size":5480,"mtime":1641529701251,"results":"20","hashOfConfig":"17"},{"size":1889,"mtime":1642109312483,"results":"21","hashOfConfig":"17"},{"size":1611,"mtime":1642109386282,"results":"22","hashOfConfig":"17"},{"size":2117,"mtime":1642124157561,"results":"23","hashOfConfig":"17"},{"size":1731,"mtime":1642109378457,"results":"24","hashOfConfig":"17"},{"size":5201,"mtime":1642120623809,"results":"25","hashOfConfig":"17"},{"size":1875,"mtime":1642113753180,"results":"26","hashOfConfig":"17"},{"size":2056,"mtime":1641939224887,"results":"27","hashOfConfig":"17"},{"size":1283,"mtime":1642110515034,"results":"28","hashOfConfig":"17"},{"size":1055,"mtime":1641866595285,"results":"29","hashOfConfig":"17"},{"size":1256,"mtime":1642028832636,"results":"30","hashOfConfig":"17"},{"size":276,"mtime":1641540793898,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ockkwn",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\index.js",[],"C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\reportWebVitals.js",[],"C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\App.js",["71","72","73","74"],"import './App.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\n//import { Switch, Route, Router } from \"react-router-dom\";\r\n\r\nimport NavigationBar from './components/Navbar/NavigationBar';\r\nimport Landing from './components/Landing/Landing';\r\nimport Cards from './components/Cards/Cards';\r\nimport CreateCard from './components/Cards/createCard';\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\"\r\nimport Register from './components/Register/Register';\r\nimport Login from './components/Login/Login';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport React from 'react';\r\n\r\n\r\n/*\r\n\t<Route component = {Landing} exact path=\"/\" />\r\n\t\t\t\t\t<Route component = {Cards} path=\"/cards\" />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Route component = { createCard} path=\"/createCard\" />\r\n*/\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t\t<div id = \"App\">\r\n\t\t\t\t<NavigationBar />\r\n\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path = \"/\" ><Landing /></Route>\r\n\t\t\t\t\t<Route component = {Cards} path=\"/card\" />\r\n\t\t\t\t\t<Route component = {CreateCard} path=\"/createCard\" />\r\n\t\t\t\t\t<Route path=\"/register\" component={Register} />\r\n\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\r\n\t\t\t\t</Switch>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t);\r\n}\r\n\r\nexport default App;","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\serviceWorker.js",[],"C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Navbar\\NavigationBar.js",["75","76"],"import React, { useState } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\"\r\nimport \"./navbar.css\"\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { Component } from \"react\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//var user = AuthService.getCurrentUser();\r\n\r\nexport default class NavigationBar extends Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.user = AuthService.getCurrentUser();\r\n    this.logoutUser = this.logoutUser.bind(this);\r\n}\r\nlogoutUser(){\r\n  AuthService.logout();\r\n  return (\r\n    <Redirect to=\"/\" />\r\n  );\r\n};\r\n\r\n  //function NavigationBar() {\r\n  render(){\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" variant=\"light\" className=\"navbar\">\r\n      <Container>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          {/* Logo Section          <Nav className=\"me-auto\">\r\n            <Navbar.Brand href=\"/\">\r\n       \r\n            </Navbar.Brand>\r\n          </Nav>*/}\r\n \r\n          \r\n          {/* Links Section */}\r\n          <Nav>\r\n            <Nav.Link className=\"nav-item\" href=\"/card\">Cards</Nav.Link>\r\n            <Nav.Link className=\"nav-item\" href=\"/\">Home</Nav.Link>\r\n            <Nav.Link className=\"nav-item\" href=\"/createCard\">Make a New Card</Nav.Link>\r\n            <Nav.Link className=\"nav-item\" href=\"/login\">Login</Nav.Link>\r\n            <Nav.Link className=\"nav-item\" href=\"/register\">Register</Nav.Link>\r\n\r\n            {/* Conditional rendering of logged-in features             {!user && <Nav.Link className=\"nav-item\" href=\"/login\">Login page</Nav.Link>}\r\n            {user && <Nav.Link className=\"nav-item\" onClick={logoutUser}>Logout</Nav.Link>}*/}\r\n\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n  \r\n  }\r\n}\r\n\r\n//export default NavigationBar","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Login\\Login.js",["77","78"],"import { React, useEffect, useState } from 'react';\r\n\r\nimport authService from \"../../services/auth-service\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n\r\n  var history = useHistory();\r\n    const [loginUsername, setUsername] = useState('');\r\n    const [loginPassword, setPassword] = useState('');\r\n    // create react references to username and password input elements\r\n    //var loginUsername = React.createRef();\r\n    //var loginPassword = React.createRef();\r\n  \r\n    // declare function to login user on submit\r\n    //var loginUser = loginUser.bind(this);\r\n  \r\n    // takes current values of inputted username and password and submits it to the backend through auth-services\r\n    const loginUser = () => {\r\n      history.push('/');\r\n\r\n      authService.login(loginUsername, loginPassword)\r\n      console.log(`Username: ${loginUsername} \\nPassword: ${loginPassword}`)\r\n    }\r\n\r\n\r\n  return (\r\n      <div>\r\n      <h1>Login</h1>    \r\n          <form>\r\n          <label for=\"loginUsername\"> Username: </label>\r\n      <br />\r\n\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          setUsername(e.target.value);\r\n        }}\r\n      ></input>\r\n      <br />\r\n      <label for=\"loginPassword\"> Password: </label>\r\n      <br />\r\n      <input\r\n        type=\"password\"\r\n        onChange={(e) => {\r\n          setPassword(e.target.value);\r\n        }}\r\n      ></input>\r\n      <br />\r\n\r\n              <input type=\"button\" value=\"Submit\" onClick={() => loginUser(loginUsername, loginPassword)}></input>\r\n          </form>\r\n      </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Cards\\Cards.js",["79"],"import { React, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Cards.css';\r\n\r\nimport AuthService from '../../services/auth-service';\r\nimport cardsService from '../../services/cards-service';\r\nimport UserService from '../../services/user-service';\r\n\r\nfunction Cards() {\r\n\tconst user = AuthService.getCurrentUser()\r\n\tvar [count, setCount] = useState(0);\r\n\r\n\tconst [data, setData] = useState(null);\r\n\tuseEffect(() => {\r\n\t\tcardsService.getCards().then((cards) => {\r\n\t\t\tvar cardData = cards.data;\r\n\t\t\tconst usernamePromise = cardData.map((element) => {\r\n\t\t\t\tconst username = UserService.getUserID(element.author);\r\n\r\n\t\t\t\treturn username.then((elem) => {\r\n\t\t\t\t\telement.username = elem.data.username;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tPromise.all(usernamePromise).then(() => setData(cardData));\r\n\t\t});\r\n\t});\r\n\t// Gets post from database and returns parsed jsx elements\r\n\t//          <input type=\"button\" value=\"Submit\" onClick={deletePost(e._id)}></input>\r\n\r\n\tconst generateCards = () => {\r\n\t\treturn data.map(e => {\r\n\t\r\n\t\t  return(\r\n\t\t\t<div className = 'blurbs'>\r\n\t\t\t  <div className='cardHead'>\r\n\t\t\t\t<h1>{e.title}</h1>\t\t\t\r\n\t\t\t  </div>\r\n\t\t\t  <p>{e.content}</p>\r\n\t\t\t  <div>\r\n\t\t\t  <input type=\"button\" value=\"Delete\" onClick={() => cardsService.deleteCard(e._id, AuthService.getCurrentUser().accessToken)}></input>\r\n\t\t\t  </div>\r\n\t   \r\n\t\t\t</div>\r\n\t\t  )\r\n\t\t})\r\n\t\r\n\t  }\r\n\r\n\treturn (\r\n\t\t<div className=\"cards\">\r\n\t\t  <h1>Cards</h1>\r\n\t\t\t  \r\n\t\t  Like this Card Stack? \r\n\t\t\t\t<div>\r\n\t\t\t\t\t{count < 1 && <button onClick={() => setCount((count + 1))}>\r\n\t\t\t\t\t\t+\r\n\t\t\t\t\t</button>}\r\n\t\t\t\t\t<span>{count}</span>\r\n\t\t\t\t\t{count >= -1 && <button onClick={() => setCount((count - 1))}>\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t</button>}\r\n\t\t\t\t</div>\r\n\t\r\n\t\t  {/* Create Post button | Accessed via log-in*/}\r\n\t\t  {user &&\r\n\t\t\t<button>\r\n\t\t\t  <NavLink className=\"createCard\" to=\"/createCard\"> + Card</NavLink>\r\n\t\t\t</button>\r\n\t\t  }\r\n\t\t  \r\n\t\t  {/* DisplaysPosts */}\r\n\t\t  <div className=\"displayCards\">\r\n\t\t\t{data ? generateCards() : 'loading'}\r\n\t\t  </div>\r\n\t\t  \r\n\t\r\n\t\t</div>\r\n\t )\r\n}\r\n\r\nexport default Cards;","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Register\\Register.js",["80","81"],"import { React, useEffect, useState } from 'react';\r\n\r\nimport authService from \"../../services/auth-service\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n// page for registering a user account\r\nfunction RegisterUser() {\r\n    var history = useHistory();\r\n    const [registerUsername, setUsername] = useState('');\r\n    const [registerPassword, setPassword] = useState('');\r\n    \r\n    // create react references to username and password input elements\r\n    //var registerUsername = React.createRef();\r\n    //var registerPassword = React.createRef();\r\n\r\n    // declare function to register user on submit\r\n    //var registerUser = registerUser.bind(this);\r\n\r\n  // takes current values of inputted username and password and submits it to the backend through auth-services\r\n  const register = () => {\r\n    history.push('/');\r\n\r\n    const username = registerUsername; \r\n    const password = registerPassword;\r\n    authService.register(username, password)\r\n    console.log(`Username: ${username} \\nPassword: ${password}`)\r\n  }\r\n\r\n    return (\r\n        <div>\r\n        <h1>Registration</h1>    \r\n            <form>\r\n            <label for=\"registerUsername\"> Username: </label>\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetUsername(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></input>\r\n\t\t\t\t<br />\r\n\t\t\t\t<label for=\"registerPassword\"> Password: </label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n        type=\"password\"\r\n\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetPassword(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></input>\r\n\t\t\t\t<br />\r\n\r\n                <input type=\"button\" value=\"Submit\" onClick={() => register(registerUsername, registerPassword)}></input>\r\n            </form>\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default RegisterUser","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Landing\\Landing.js",["82","83","84"],"import React, { useState, useRef } from 'react';\r\nimport \"./Landing.css\"\r\nimport { useSpring, animated } from 'react-spring';\r\nimport ReactDOM from 'react-dom';\r\nimport particlesConfig from './particles-config.js';\r\nimport Typewriter from '../../static/images/typewriter.png'\r\nimport Features from '../../static/images/features.png'\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div className=\"landing\">\r\n      {/* Landing Page 1 <img className=\"logo1\" alt=\"logo1\" src={Logo1} />*/}\r\n      <div className=\"hero\">\r\n        <div>\r\n          <p>\r\n            Create Study Cards!\r\n          </p>\r\n          <a href=\"/card\">\r\n            <button>Get Started</button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Effects */}\r\n      <div className=\"main\">\r\n        <Hero>\r\n          <div className=\"container\">\r\n            <Info />\r\n            <div className=\"row\">\r\n              {cards.map((card, i) => (\r\n                <div className=\"column\">\r\n                  <Card>\r\n                    <div className=\"card-title\">{card.title}</div>\r\n                    <div className=\"card-body\">{card.description}</div>\r\n                    <Image ratio={card.imageRatio} src={card.image} />\r\n                  </Card>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Hero>\r\n    </div>\r\n    <div className  = \"hero\">\r\n      Share with your friends!\r\n    </div>\r\n\r\n      {/* Landing Page 2 */}\r\n      <div className=\"hero2\">\r\n        <p>\r\n          Create cards for anything you are studying for!{\" \"}\r\n        </p>\r\n\r\n        <button>Learn More</button>\r\n      </div>\r\n      <footer></footer>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nfunction Hero({ children }) {\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className=\"hero-body\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Info() {\r\n  return (\r\n    <div className=\"info\">\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Image({ ratio, src }) {\r\n  return (\r\n    <div className=\"image-container\">\r\n      <div className=\"image-inner-container\">\r\n        <div\r\n          className=\"ratio\"\r\n          style={{\r\n            paddingTop: ratio * 100 + '%'\r\n          }}\r\n        >\r\n          <div className=\"ratio-inner\">\r\n            <img src={src} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Card({ children }) {\r\n  // We add this ref to card element and use in onMouseMove event ...\r\n  // ... to get element's offset and dimensions.\r\n  const ref = useRef();\r\n\r\n  // Keep track of whether card is hovered so we can increment ...\r\n  // ... zIndex to ensure it shows up above other cards when animation causes overlap.\r\n  const [isHovered, setHovered] = useState(false);\r\n\r\n  const [animatedProps, setAnimatedProps] = useSpring(() => {\r\n    return {\r\n      // Array containing [rotateX, rotateY, and scale] values.\r\n      // We store under a single key (xys) instead of separate keys ...\r\n      // ... so that we can use animatedProps.xys.interpolate() to ...\r\n      // ... easily generate the css transform value below.\r\n      xys: [0, 0, 1],\r\n      // Setup physics\r\n      config: { mass: 10, tension: 400, friction: 40, precision: 0.00001 }\r\n    };\r\n  });\r\n\r\n  return (\r\n    <animated.div\r\n      ref={ref}\r\n      className=\"card\"\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseMove={({ clientX, clientY }) => {\r\n        // Get mouse x position within card\r\n        const x =\r\n          clientX -\r\n          (ref.current.offsetLeft -\r\n            (window.scrollX || window.pageXOffset || document.body.scrollLeft));\r\n\r\n        // Get mouse y position within card\r\n        const y =\r\n          clientY -\r\n          (ref.current.offsetTop -\r\n            (window.scrollY || window.pageYOffset || document.body.scrollTop));\r\n\r\n        // Set animated values based on mouse position and card dimensions\r\n        const dampen = 50; // Lower the number the less rotation\r\n        const xys = [\r\n          -(y - ref.current.clientHeight / 2) / dampen, // rotateX\r\n          (x - ref.current.clientWidth / 2) / dampen, // rotateY\r\n          1.07 // Scale\r\n        ];\r\n\r\n        // Update values to animate to\r\n        setAnimatedProps({ xys: xys });\r\n      }}\r\n      onMouseLeave={() => {\r\n        setHovered(false);\r\n        // Set xys back to original\r\n        setAnimatedProps({ xys: [0, 0, 1] });\r\n      }}\r\n      style={{\r\n        // If hovered we want it to overlap other cards when it scales up\r\n        zIndex: isHovered ? 2 : 1,\r\n        // Interpolate function to handle css changes\r\n        transform: animatedProps.xys.interpolate(\r\n          (x, y, s) =>\r\n            `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\r\n        )\r\n      }}\r\n    >\r\n      {children}\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nconst cards = [\r\n  {\r\n    title: 'Study Cards that are easy to access and manage.',\r\n    description:\r\n      'Users upload study cards for various subjects.',\r\n    image: Features,\r\n    imageRatio: 1016 / 1016\r\n  },\r\n  {\r\n    title: 'Many Subjects and Tools',\r\n    description:\r\n      'Browse other user study cards, ranging from Math to Medicine!',\r\n    image: Typewriter,\r\n    imageRatio: 839 / 1133\r\n  },\r\n\r\n];\r\n\r\n//export default Landing","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Cards\\createCard.js",["85","86"],"import { React, useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n// importing authService in order to use function that gets info of currently authenticated user\r\nimport authService from \"../../services/auth-service\";\r\nimport cardsService from \"../../services/cards-service\";\r\n\r\n// form for submitting a post\r\n\r\n\r\nfunction CardsComponent() {\r\n    //constructor(props) {\r\n    //    super(props); \r\n\r\n    // refs for title and body of post\r\n    //var cardTitle = React.createRef(); \r\n    //var cardBody = React.createRef(); \r\n    const [cardTitle, setCardTitle] = useState('');\r\n\tconst [cardBody, setBody] = useState('');\r\n\r\n    var history = useHistory();\r\n    \r\n    // function for submitting post\r\n    //this.submitCard = this.submitCard.bind(this);\r\n   \r\n\r\n    //}\r\n\r\n    //submits posts with title, body, and currently authenticated user's accessToken\r\n    const submitCard = () => {\r\n        history.push('/card');\r\n\r\n        const title = cardTitle\r\n        const content = cardBody\r\n        const accessToken = authService.getCurrentUser().accessToken\r\n        cardsService.submitCard(title, content, accessToken)\r\n        \r\n    }\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <h1> Card Submission </h1>\r\n            <form>\r\n            <label for=\"cardTitle\"> Title: </label>\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetCardTitle(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></input>\r\n\t\t\t\t<br />\r\n\t\t\t\t<label for=\"cardBody\"> Body: </label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<textarea\r\n\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\tcols=\"50\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetBody(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></textarea>\r\n\t\t\t\t<br />\r\n\r\n                <input type=\"button\" value=\"Submit\" onClick={() => submitCard(cardTitle, cardBody)}></input>\r\n            </form>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default CardsComponent\r\n\r\n","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\components\\Landing\\particles-config.js",["87"],"// Generate a config at https://vincentgarreau.com/particles.js/\r\n\r\nexport default {\r\n    particles: {\r\n      number: {\r\n        value: 100,\r\n        density: {\r\n          enable: false,\r\n          value_area: 600\r\n        }\r\n      },\r\n      color: {\r\n        value: \"#ffffff\"\r\n      },\r\n      shape: {\r\n        type: \"circle\",\r\n        stroke: {\r\n          width: 0,\r\n          color: \"#000000\"\r\n        }\r\n      },\r\n      opacity: {\r\n        value: 0.2,\r\n        random: false,\r\n        anim: {\r\n          enable: false,\r\n          speed: 1,\r\n          opacity_min: 0.1,\r\n          sync: false\r\n        }\r\n      },\r\n      size: {\r\n        value: 3,\r\n        random: true,\r\n        anim: {\r\n          enable: false,\r\n          speed: 40,\r\n          size_min: 0.1,\r\n          sync: false\r\n        }\r\n      },\r\n      line_linked: {\r\n        enable: false,\r\n        distance: 150,\r\n        color: \"#ffffff\",\r\n        opacity: 0.4,\r\n        width: 1\r\n      },\r\n      move: {\r\n        enable: true,\r\n        speed: 10,\r\n        direction: \"left\",\r\n        random: true,\r\n        straight: true,\r\n        out_mode: \"out\",\r\n        bounce: false,\r\n        attract: {\r\n          enable: false,\r\n          rotateX: 600,\r\n          rotateY: 1200\r\n        }\r\n      }\r\n    },\r\n    interactivity: {\r\n      detect_on: \"canvas\",\r\n      events: {\r\n        onhover: {\r\n          enable: false,\r\n          mode: \"grab\"\r\n        },\r\n        onclick: {\r\n          enable: true,\r\n          mode: \"repulse\"\r\n        },\r\n        resize: true\r\n      },\r\n      modes: {\r\n        grab: {\r\n          distance: 200,\r\n          line_linked: {\r\n            opacity: 1\r\n          }\r\n        },\r\n        bubble: {\r\n          distance: 400,\r\n          size: 40,\r\n          duration: 2,\r\n          opacity: 8,\r\n          speed: 3\r\n        },\r\n        repulse: {\r\n          distance: 200,\r\n          duration: 0.4\r\n        },\r\n        push: {\r\n          particles_nb: 4\r\n        },\r\n        remove: {\r\n          particles_nb: 2\r\n        }\r\n      }\r\n    },\r\n    retina_detect: true\r\n  };\r\n  ","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\services\\auth-service.js",[],"C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\services\\user-service.js",[],"C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\services\\cards-service.js",["88"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/card\";\r\n\r\n// handles features for posts (submitting, updating, deleting, retrieving posts)\r\nclass cardsService {\r\n\r\n    // makes a POST req to backend to submit post into the database\r\n    // takes in title and body of post as well as the author \r\n    submitCard(title, content, accessToken) {\r\n        axios\r\n        .post(`${API_URL}/create`, {\r\n            title,\r\n            content\r\n        },\r\n        {\r\n            headers: {\r\n                'x-access-token': accessToken\r\n            }\r\n        })\r\n        .then( response => {\r\n            if (response.status == '200') {\r\n                console.log('Card was successfully submitted')\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    deleteCard(cardid, accessToken) {\r\n        axios.delete(API_URL + '/delete/'+ cardid, {\r\n            headers: {\r\n            'x-access-token': accessToken\r\n            },\r\n            data: cardid\r\n        });\r\n    }\r\n\r\n    getCards() {\r\n        return axios.get(API_URL)\r\n        //.then(function(posts){\r\n          //  console.log(posts)\r\n        //}\r\n        //);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new cardsService();","C:\\Users\\David\\Desktop\\dev\\courses\\acs2912.2\\client\\src\\services\\auth-header.js",[],{"ruleId":"89","severity":1,"message":"90","line":9,"column":10,"nodeType":"91","messageId":"92","endLine":9,"endColumn":16},{"ruleId":"89","severity":1,"message":"93","line":9,"column":18,"nodeType":"91","messageId":"92","endLine":9,"endColumn":27},{"ruleId":"89","severity":1,"message":"94","line":9,"column":29,"nodeType":"91","messageId":"92","endLine":9,"endColumn":32},{"ruleId":"89","severity":1,"message":"95","line":13,"column":10,"nodeType":"91","messageId":"92","endLine":13,"endColumn":23},{"ruleId":"89","severity":1,"message":"96","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"97","line":7,"column":10,"nodeType":"91","messageId":"92","endLine":7,"endColumn":20},{"ruleId":"89","severity":1,"message":"98","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"99","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":14},{"ruleId":"89","severity":1,"message":"100","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"89","severity":1,"message":"98","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"99","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":14},{"ruleId":"89","severity":1,"message":"101","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":16},{"ruleId":"89","severity":1,"message":"102","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":88,"column":13,"nodeType":"105","endLine":88,"endColumn":30},{"ruleId":"89","severity":1,"message":"98","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"99","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":3,"column":1,"nodeType":"108","endLine":104,"endColumn":5},{"ruleId":"109","severity":1,"message":"110","line":22,"column":33,"nodeType":"111","messageId":"112","endLine":22,"endColumn":35},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Nav' is defined but never used.","'BrowserRouter' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","'ReactDOM' is defined but never used.","'particlesConfig' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]